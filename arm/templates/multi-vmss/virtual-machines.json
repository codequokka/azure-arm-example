{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {},
  "variables": {
    "capacity": 2,
    "adminUserPublicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCwhmi1p0bvpNhM9NA5Uc5VYXLO/cFw4G3ouVqQWMHa0pPztMxJpvmUmI/NmhU1H/P1WBF8DkmRpaK3OjLpdaDssGA+ZWg4Rd2mxhtwP5pGtl9Rh1u7IdYoS3pCCjlf+8E97jRVEJwkqzoj+0U+4MIT85eI0fFOH1MG/Vn78J6Y+4cNyQHqMYtMi6/jFIzGSWZJVBiau+RKiXDMrP3LbuTk3S1oCbSevb9NTdu3STaHNEhitftxyAJCcwimaT5P/graJNw540qKneK/QVewFf5h3kK6Cu15pPUbBdDHKYzmwKLI/RSj4/nnVzvWdm3egMew1Fd6ZNDGHMVJgoATDUKt nbchk@DESKTOP-8GCKMAS"
  },
  "resources": [
    {
      "name": "vmss-lb-pip",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard"
      },
      "tags": {
        "displayName": "vmss-lb-pip"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "vmss-lb"
        }
      }
    },
    {
      "apiVersion": "2020-05-01",
      "name": "vmss-lb",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'vmss-lb-pip')]"
      ],
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'vmss-lb-pip')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool"
          }
        ],
        "inboundNatRules": [],
        "loadbalancingRules": [
          {
            "name": "LBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', 'vmss-lb', 'LoadBalancerFrontEnd')]"
              },
              "backendaddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'vmss-lb', 'BackendPool')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', 'vmss-lb', 'tcpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "numberOfProbes": 2,
              "intervalInSeconds": 5
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2021-03-01",
      "name": "vmss",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_B1ls",
        "tier": "Standard",
        "capacity": "[variables('capacity')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', 'vmss-lb')]"
      ],
      "properties": {
        "orchestrationMode": "Flexible",
        "platformFaultDomainCount": 1,
        "singlePlacementGroup": false,
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "publisher": "Canonical",
              "offer": "UbuntuServer",
              "sku": "16.04-LTS",
              "version": "latest"
            },
            "osDisk": {
              "caching": "ReadWrite",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "Standard_LRS"
              }
            }
          },
          "osProfile": {
            "computerNamePrefix": "vmss-vm",
            "adminUsername": "kitsuneinu",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', 'kitsuneinu', '/.ssh/authorized_keys')]",
                    "keyData": "[variables('adminUserPublicKey')]"
                  }
                ]
              }
            }
          },
          "networkProfile": {
            "networkApiVersion": "2020-11-01",
            "networkInterfaceConfigurations": [
              {
                "name": "vmss-vm-ni",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "vmss-vm-ipconfig",
                      "properties": {
                        "primary": true,
                        "subnet": {
                          "id": "[resourceId('arm-example-base-rg', 'Microsoft.Network/virtualNetworks/subnets', 'vnet', 'public')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', 'vmss-lb', 'BackendPool')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
          // "extensionProfile": {
          //   "extensions": [
          //     {
          //       "name": "lapextension",
          //       "properties": {
          //         "publisher": "Microsoft.Azure.Extensions",
          //         "type": "CustomScript",
          //         "typeHandlerVersion": "2.0",
          //         "autoUpgradeMinorVersion": true,
          //         "settings": {
          //           "fileUris": [
          //             "[uri(parameters('_artifactsLocation'), concat('installserver.sh', parameters('_artifactsLocationSasToken')))]",
          //             "[uri(parameters('_artifactsLocation'), concat('workserver.py', parameters('_artifactsLocationSasToken')))]"
          //           ],
          //           "commandToExecute": "bash installserver.sh"
          //         }
          //       }
          //     }
          //   ]
          // }
        }
      }
    }
  ],
  "outputs": {}
}
